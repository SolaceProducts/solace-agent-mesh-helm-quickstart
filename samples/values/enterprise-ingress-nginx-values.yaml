# SAM Enterprise Mode with NGINX Ingress + cert-manager
# This example shows how to deploy SAM with NGINX Ingress Controller
# TLS certificates are automatically provisioned using cert-manager and Let's Encrypt

sam:
  enterprise: true
  dnsName: "sam.example.com"  # Your DNS hostname
  sessionSecretKey: "change-me-to-secure-random-string"
  oauthProvider:
    oidc:
      issuer: "https://accounts.google.com"
      clientId: "your-client-id"
      clientSecret: "your-client-secret"

broker:
  url: "wss://your-broker.messaging.solace.cloud:443"
  clientUsername: "your-username"
  password: "your-password"
  vpn: "your-vpn"

llmService:
  planningModel: "gpt-4o"
  generalModel: "gpt-4o"
  reportModel: "gpt-4o"
  imageModel: "dall-e-3"
  transcriptionModel: "whisper-1"
  llmServiceEndpoint: "https://api.openai.com/v1"
  llmServiceApiKey: "your-openai-api-key"

# Service Configuration
service:
  type: ClusterIP
  tls:
    enabled: false  # NGINX handles TLS termination

# Ingress Configuration for NGINX
ingress:
  enabled: true
  className: "nginx"
  annotations:
    # SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"

    # cert-manager automatic TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Optional: Rate limiting
    # nginx.ingress.kubernetes.io/limit-rps: "100"

  hosts:
    - host: sam.example.com  # Must specify host for NGINX
      paths:
        # OAuth2 Authentication endpoints
        - path: /login
          pathType: Prefix
          portName: auth
        - path: /callback
          pathType: Prefix
          portName: auth
        - path: /refresh_token
          pathType: Prefix
          portName: auth
        - path: /user_info
          pathType: Prefix
          portName: auth
        - path: /exchange-code
          pathType: Prefix
          portName: auth
        - path: /is_token_valid
          pathType: Prefix
          portName: auth
        # Web UI
        - path: /
          pathType: Prefix
          portName: webui

  # TLS configuration (cert-manager will populate this secret)
  tls:
    - secretName: sam-tls
      hosts:
        - sam.example.com

# Persistence Configuration
global:
  persistence:
    namespaceId: "solace-agent-mesh"
    enabled: true

# SAM Deployment Configuration
samDeployment:
  serviceAccount:
    name: solace-agent-mesh-sa

  image:
    repository: gcr.io/gcp-maas-prod/solace-agent-mesh-enterprise
    tag: 1.5.2-5
    pullPolicy: Always

  agentDeployer:
    image:
      repository: gcr.io/gcp-maas-prod/sam-agent-deployer
      tag: 1.1.0
      pullPolicy: Always

# Persistence Layer Configuration
persistence-layer:
  postgresql:
    persistence:
      size: 20Gi
  seaweedfs:
    persistence:
      size: 50Gi
