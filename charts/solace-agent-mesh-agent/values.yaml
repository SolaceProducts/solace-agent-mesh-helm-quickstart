replicaCount: 1

global:
  persistence:
    namespaceId: "solace-agent-mesh"
  imageRegistry: ""

agentId: ""

config:
  # Option 1: Provide agent configuration as structured YAML (below)
  # Option 2: Provide raw YAML string using config.agentYaml (uncomment below)
  # agentYaml: |
  #   agents:
  #     - name: web_request
  #       enabled: true

  # Built-in agents configuration
  agents:
    - name: web_request
      enabled: true
    - name: global
      enabled: true
    - name: image_processing
      enabled: false
    - name: slack
      enabled: false
  
  # Built-in services configuration
  services:
    - name: embedding
      enabled: false
  
  # Directory configurations
  configDirectory: configs
  modulesDirectory: modules
  overwriteDirectory: overwrite
  envFile: .env
  
  # Build configuration
  build:
    buildDirectory: build
    extractEnvVars: true
    logLevelOverride: INFO
    orchestratorInstanceCount: 5
  
  # Runtime configuration
  runtime:
    fileService:
      type: volume
      maxTimeToLive: 86400
      expirationCheckInterval: 600
      volume:
        directory: /tmp/solace-agent-mesh
      bucket:
        bucketName: ""
        endpointUrl: ""
        boto3Config:
          regionName: ""
          awsAccessKeyId: ""
          awsSecretAccessKey: ""
      customModule:
        modulePath: ""
        config: {}
serviceAccount:
  name: solace-agent-mesh-sa
image:
  repository: solace/solace-agent-mesh
  tag: latest
  pullPolicy: Always

rollout:
  rollingUpdate: {}
  strategy: Recreate

podSecurityContext:
securityContext:
nodeSelector: {}
tolerations: []
annotations: {}
podAnnotations: {}
podLabels: {}

files: []

# Solace Broker Configuration
solaceBroker:
  url: "ws://localhost:8080"
  username: "default"
  password: "default"
  vpn: "default"
  useTemporaryQueues: true

# Namespace identifier (required)
namespace: ""

# LLM Service Configuration (required)
llmService:
  generalModelName: ""
  endpoint: ""
  apiKey: ""

# Additional custom environment variables
environmentVariables: {}
# CUSTOM_VAR: "custom_value"

datadog:
  tags:

service:
  type: LoadBalancer
  port: 5001
  annotations: {}
  dns:
    enabled: false
    hostname: ""
    ttl: "300"

resources:
  sam:
    requests:
      cpu: 1000m
      memory: 1024Mi
    limits:
      cpu: 2000m
      memory: 2048Mi
