replicaCount: 1

config:
  # Built-in agents configuration
  agents:
    - name: web_request
      enabled: true
    - name: global
      enabled: true
    - name: image_processing
      enabled: false
    - name: slack
      enabled: false
  
  # Built-in services configuration
  services:
    - name: embedding
      enabled: false
  
  # Directory configurations
  configDirectory: configs
  modulesDirectory: modules
  overwriteDirectory: overwrite
  envFile: .env
  
  # Build configuration
  build:
    buildDirectory: build
    extractEnvVars: true
    logLevelOverride: INFO
    orchestratorInstanceCount: 5
  
  # Runtime configuration
  runtime:
    fileService:
      type: volume
      maxTimeToLive: 86400
      expirationCheckInterval: 600
      volume:
        directory: /tmp/solace-agent-mesh
      bucket:
        bucketName: ""
        endpointUrl: ""
        boto3Config:
          regionName: ""
          awsAccessKeyId: ""
          awsSecretAccessKey: ""
      customModule:
        modulePath: ""
        config: {}

serviceAccount:
  name: solace-agent-mesh-sa
image:
  repository: solace/solace-agent-mesh
  tag: latest
  pullPolicy: Always
  imagePullSecrets: []

rollout:
  rollingUpdate: {}
  strategy: Recreate

podSecurityContext:
  fsGroup: 10002
  runAsUser: 10001
securityContext:
  allowPrivilegeEscalation: false
nodeSelector: {}
tolerations: []
annotations: {}
podAnnotations: {}
podLabels: {}

tls:
  enabled: true
  cert: ""
  key: ""

environmentVariables: []

datadog:
  tags:

service:
  type: LoadBalancer
  port: 5001
  annotations: {}
  dns:
    enabled: false
    hostname: ""
    ttl: "300"

resources:
  sam:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 200m
      memory: 768Mi

# SAM host info
sam:
  devMode: false
  hostname:
  webUiPort:
  callbackUrl:
  namespace: default-namespace
  idpUrl:
  tlsCertPath: /app/certs/tls.crt
  tlsKeyPath: /app/certs/tls.key
  tlsPassphrase:
  sessionSecretKey: random-secret-key
  sessionType: memory # memory or sql
  webUIDatabaseUrl: postgresql+psycopg2://webui:webui@localhost:5432/webui
  orchestratorDatabaseUrl: postgresql+psycopg2://orchestrator:orchestrator@localhost:5432/orchestrator

llm:
  planningModel: openai/claude-3-7-sonnet
  embeddingModel: openai/claude-3-7-sonnet
  llmServiceEndpoint: https://llm.endpoint.com
  llmServiceApiKey: llm-service-api-key

solaceBroker:
  url: wss://localhost:8443
  vpn: default
  username: admin
  password: admin

install-bundled-pgsql: false
# postgresql:
#   auth:
#     database: gateway
#     username: gateway
#     password: password
#   primary:
#     service:
#       port: 5432
#   metrics:
#     enabled: false
#   persistence:
#     enabled: false