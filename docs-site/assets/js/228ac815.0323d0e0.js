"use strict";(globalThis.webpackChunkdocs_site=globalThis.webpackChunkdocs_site||[]).push([[765],{7773:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"network-configuration","title":"Network Configuration","description":"This guide explains the different ways to expose SAM (Solace Agent Mesh) to the internet and when to use each approach.","source":"@site/docs/network-configuration.md","sourceDirName":".","slug":"/network-configuration","permalink":"/solace-agent-mesh-helm-quickstart/docs-site/network-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/SolaceProducts/solace-agent-mesh-helm-quickstart/edit/main/docs/network-configuration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Network Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/solace-agent-mesh-helm-quickstart/docs-site/"},"next":{"title":"Troubleshooting","permalink":"/solace-agent-mesh-helm-quickstart/docs-site/troubleshooting"}}');var t=s(4848),i=s(8453);const a={sidebar_position:2,title:"Network Configuration"},l="SAM Network Configuration Guide",o={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Service Exposure Options",id:"service-exposure-options",level:2},{value:"Option 1: ClusterIP (Default)",id:"option-1-clusterip-default",level:3},{value:"Option 2: NodePort",id:"option-2-nodeport",level:3},{value:"Option 3: LoadBalancer",id:"option-3-loadbalancer",level:3},{value:"Option 4: Ingress (Recommended for Production)",id:"option-4-ingress-recommended-for-production",level:3},{value:"Ingress Configuration",id:"ingress-configuration",level:2},{value:"AWS ALB Ingress",id:"aws-alb-ingress",level:3},{value:"GKE Ingress (Google Cloud)",id:"gke-ingress-google-cloud",level:3},{value:"Azure Application Gateway Ingress (AKS)",id:"azure-application-gateway-ingress-aks",level:3},{value:"NGINX Ingress",id:"nginx-ingress",level:3},{value:"Other Ingress Controllers",id:"other-ingress-controllers",level:3},{value:"TLS/SSL Configuration",id:"tlsssl-configuration",level:2},{value:"When Using Ingress (Recommended)",id:"when-using-ingress-recommended",level:3},{value:"When Using LoadBalancer/NodePort",id:"when-using-loadbalancernodeport",level:3},{value:"Decision Matrix",id:"decision-matrix",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Development (Local)",id:"example-1-development-local",level:3},{value:"Example 2: Development (Team)",id:"example-2-development-team",level:3},{value:"Example 3: Simple Production (AWS)",id:"example-3-simple-production-aws",level:3},{value:"Example 4: Production with AWS ALB",id:"example-4-production-with-aws-alb",level:3},{value:"Example 5: Production with GKE Ingress",id:"example-5-production-with-gke-ingress",level:3},{value:"Example 6: Production with Azure Application Gateway (AKS)",id:"example-6-production-with-azure-application-gateway-aks",level:3},{value:"Example 7: Production with NGINX + cert-manager",id:"example-7-production-with-nginx--cert-manager",level:3},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Support",id:"support",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sam-network-configuration-guide",children:"SAM Network Configuration Guide"})}),"\n",(0,t.jsx)(n.p,{children:"This guide explains the different ways to expose SAM (Solace Agent Mesh) to the internet and when to use each approach."}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#service-exposure-options",children:"Service Exposure Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#option-1-clusterip-default",children:"Option 1: ClusterIP (Default)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#option-2-nodeport",children:"Option 2: NodePort"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#option-3-loadbalancer",children:"Option 3: LoadBalancer"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#option-4-ingress-recommended-for-production",children:"Option 4: Ingress (Recommended for Production)"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#ingress-configuration",children:"Ingress Configuration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#aws-alb-ingress",children:"AWS ALB Ingress"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#nginx-ingress",children:"NGINX Ingress"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#other-ingress-controllers",children:"Other Ingress Controllers"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#tlsssl-configuration",children:"TLS/SSL Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#decision-matrix",children:"Decision Matrix"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"SAM requires external access for users to access the Web UI and for OAuth2/OIDC authentication flows. Kubernetes provides multiple methods to expose services externally, each with different trade-offs."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"SAM exposes three ports:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Port 80/443"}),": Web UI (HTTP/HTTPS)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Port 5050"}),": OAuth2 Authentication Server"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"All ports are HTTP-based and can be exposed through any of the methods below."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"service-exposure-options",children:"Service Exposure Options"}),"\n",(0,t.jsx)(n.h3,{id:"option-1-clusterip-default",children:"Option 1: ClusterIP (Default)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it is:"})," Internal-only access within the Kubernetes cluster."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"When to use:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Development/testing with ",(0,t.jsx)(n.code,{children:"kubectl port-forward"})]}),"\n",(0,t.jsx)(n.li,{children:"When using Ingress for external access"}),"\n",(0,t.jsx)(n.li,{children:"Maximum security (no external exposure)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"service:\n  type: ClusterIP\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access SAM:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Port-forward to local machine\nkubectl port-forward -n <namespace> svc/sam 8443:443\n\n# Access at https://localhost:8443\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Most secure (no external exposure)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 No cloud costs"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Works everywhere"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c Requires port-forward for local access"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Not suitable for team/production use"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"option-2-nodeport",children:"Option 2: NodePort"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it is:"})," Exposes service on each node's IP at a static port (30000-32767 range)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"When to use:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Development environments without Ingress"}),"\n",(0,t.jsx)(n.li,{children:"Bare-metal clusters"}),"\n",(0,t.jsx)(n.li,{children:"Testing with team members"}),"\n",(0,t.jsx)(n.li,{children:"Quick external access"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"service:\n  type: NodePort\n  nodePorts:\n    https: 30443  # Optional: specify port (or auto-assign)\n    http: 30080\n    auth: 30050\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access SAM:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Get node IP\nNODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type==\"ExternalIP\")].address}')\n\n# Get assigned NodePort\nNODE_PORT=$(kubectl get svc sam -o jsonpath='{.spec.ports[?(@.name==\"webui-tls\")].nodePort}')\n\n# Access at https://$NODE_IP:$NODE_PORT\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Simple setup"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 No external dependencies"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Works in any Kubernetes environment"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c Requires non-standard ports (30000-32767)"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Must know node IPs"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Not recommended for production"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"option-3-loadbalancer",children:"Option 3: LoadBalancer"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it is:"})," Provisions a cloud load balancer with an external IP."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"When to use:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Simple cloud deployments (AWS, GCP, Azure)"}),"\n",(0,t.jsx)(n.li,{children:"Quick production setup"}),"\n",(0,t.jsx)(n.li,{children:"No Ingress controller available"}),"\n",(0,t.jsx)(n.li,{children:"Non-HTTP protocols (not applicable to SAM)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: LoadBalancer\n  annotations:\n    # AWS NLB example\n    service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"\n    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access SAM:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Get external IP\nkubectl get svc sam -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'\n\n# Configure DNS to point to this address\n# Access at https://sam.example.com\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Pros:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Easy to set up"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Cloud-native"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Automatic external IP"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cons:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Costs money"})," (one load balancer per service)"]}),"\n",(0,t.jsx)(n.li,{children:"\u274c Only works with cloud providers or MetalLB"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Less efficient than Ingress for multiple services"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cost Comparison:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 LoadBalancer service = 1 cloud load balancer (~$15-30/month)"}),"\n",(0,t.jsx)(n.li,{children:"10 services = 10 load balancers ($150-300/month)"}),"\n",(0,t.jsx)(n.li,{children:"1 Ingress = 1 load balancer for all services (~$15-30/month total)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"option-4-ingress-recommended-for-production",children:"Option 4: Ingress (Recommended for Production)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it is:"})," HTTP/HTTPS routing layer that uses a single load balancer for multiple services."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"When to use:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Production deployments"})," \u2705"]}),"\n",(0,t.jsx)(n.li,{children:"Cost optimization"}),"\n",(0,t.jsx)(n.li,{children:"Advanced routing needs (path-based, host-based)"}),"\n",(0,t.jsx)(n.li,{children:"TLS management with cert-manager"}),"\n",(0,t.jsx)(n.li,{children:"Integration with WAF, rate limiting, etc."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Cost-effective"})," (one LB for many services)"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Layer 7 routing"})," (HTTP/HTTPS)"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Centralized TLS"})," management"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Advanced features"})," (URL rewrites, authentication, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Industry standard"})," for HTTP applications"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration Overview:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP  # Ingress sits in front of ClusterIP service\n\ningress:\n  enabled: true\n  className: "nginx"  # or "alb", "traefik", etc.\n  hosts:\n    - host: sam.example.com\n      paths:\n        - path: /\n          pathType: Prefix\n'})}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"#ingress-configuration",children:"Ingress Configuration"})," section below for detailed examples."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"ingress-configuration",children:"Ingress Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"aws-alb-ingress",children:"AWS ALB Ingress"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Best for:"})," AWS EKS clusters"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"AWS Load Balancer Controller installed"}),"\n",(0,t.jsx)(n.li,{children:"ACM certificate for TLS"}),"\n",(0,t.jsx)(n.li,{children:"Subnets configured for ALB"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # ALB handles TLS termination\n\ningress:\n  enabled: true\n  className: "alb"\n  annotations:\n    # ALB configuration\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/target-type: ip\n    alb.ingress.kubernetes.io/listen-ports: \'[{"HTTP": 80}, {"HTTPS":443}]\'\n\n    # TLS certificate (ACM)\n    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:REGION:ACCOUNT:certificate/ID\n\n    # SSL redirect\n    alb.ingress.kubernetes.io/ssl-redirect: \'{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}\'\n\n    # Health check\n    alb.ingress.kubernetes.io/healthcheck-path: /\n    alb.ingress.kubernetes.io/success-codes: "200"\n\n    # Subnets for ALB\n    alb.ingress.kubernetes.io/subnets: subnet-xxx,subnet-yyy\n\n    # External DNS (optional)\n    external-dns.alpha.kubernetes.io/hostname: sam.example.com\n\n  hosts:\n    - host: ""  # Empty for ALB (accepts all traffic)\n      paths:\n        # Auth endpoints \u2192 port 5050\n        - path: /login\n          pathType: Prefix\n          portName: auth\n        - path: /callback\n          pathType: Prefix\n          portName: auth\n        - path: /refresh_token\n          pathType: Prefix\n          portName: auth\n        - path: /user_info\n          pathType: Prefix\n          portName: auth\n        - path: /exchange-code\n          pathType: Prefix\n          portName: auth\n        # Web UI \u2192 port 80 (HTTP backend, TLS at ALB)\n        - path: /\n          pathType: Prefix\n          portName: webui\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Traffic Flow:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Client (HTTPS)\n   \u2193\nAWS ALB (TLS termination via ACM)\n   \u2193\nHTTP (internal VPC traffic)\n   \u2193\nKubernetes Service\n   \u2193\nSAM Pods\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"TLS termination at ALB using ACM certificates"}),"\n",(0,t.jsx)(n.li,{children:"No need for TLS certificates in Kubernetes"}),"\n",(0,t.jsx)(n.li,{children:"Backend communication via HTTP (secure within VPC)"}),"\n",(0,t.jsx)(n.li,{children:"External DNS automatically creates Route53 records"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"gke-ingress-google-cloud",children:"GKE Ingress (Google Cloud)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Best for:"})," Google Kubernetes Engine (GKE) clusters"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GKE cluster with Ingress enabled"}),"\n",(0,t.jsx)(n.li,{children:"Google-managed SSL certificate or cert-manager"}),"\n",(0,t.jsx)(n.li,{children:"Static IP reserved (optional but recommended)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # GKE Ingress handles TLS termination\n\ningress:\n  enabled: true\n  className: "gce"  # Google Cloud Ingress\n  annotations:\n    # Static IP (optional, recommended for production)\n    kubernetes.io/ingress.global-static-ip-name: "sam-static-ip"\n\n    # Google-managed SSL certificate\n    networking.gke.io/managed-certificates: "sam-ssl-cert"\n\n    # Or use cert-manager\n    # cert-manager.io/cluster-issuer: "letsencrypt-prod"\n\n    # Enable HTTPS redirect\n    kubernetes.io/ingress.allow-http: "false"\n\n    # Backend configuration (optional)\n    cloud.google.com/backend-config: \'{"default": "sam-backend-config"}\'\n\n  hosts:\n    - host: sam.example.com  # Must specify host for GCE\n      paths:\n        # Auth endpoints \u2192 port 5050\n        - path: /login\n          pathType: Prefix\n          portName: auth\n        - path: /callback\n          pathType: Prefix\n          portName: auth\n        - path: /refresh_token\n          pathType: Prefix\n          portName: auth\n        - path: /user_info\n          pathType: Prefix\n          portName: auth\n        - path: /exchange-code\n          pathType: Prefix\n          portName: auth\n        # Web UI \u2192 port 80 (HTTP backend, TLS at Ingress)\n        - path: /\n          pathType: Prefix\n          portName: webui\n\n  # If using cert-manager instead of Google-managed certs\n  tls: []\n    # - secretName: sam-tls\n    #   hosts:\n    #     - sam.example.com\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Setup Steps:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Create a static IP (recommended):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"gcloud compute addresses create sam-static-ip --global\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Create a Google-managed SSL certificate:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create ManagedCertificate resource\ncat <<EOF | kubectl apply -f -\napiVersion: networking.gke.io/v1\nkind: ManagedCertificate\nmetadata:\n  name: sam-ssl-cert\nspec:\n  domains:\n    - sam.example.com\nEOF\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. (Optional) Create BackendConfig for custom settings:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | kubectl apply -f -\napiVersion: cloud.google.com/v1\nkind: BackendConfig\nmetadata:\n  name: sam-backend-config\nspec:\n  healthCheck:\n    checkIntervalSec: 15\n    port: 80\n    type: HTTP\n    requestPath: /\n  timeoutSec: 30\n  connectionDraining:\n    drainingTimeoutSec: 60\nEOF\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"4. Install SAM:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install sam . -f values.yaml\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"5. Get the Ingress IP:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get ingress sam -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"6. Configure DNS:"}),"\nCreate an A record pointing ",(0,t.jsx)(n.code,{children:"sam.example.com"})," to the Ingress IP."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Traffic Flow:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Client (HTTPS)\n   \u2193\nGoogle Cloud Load Balancer (TLS termination)\n   \u2193\nHTTP (internal GCP network)\n   \u2193\nGKE Service\n   \u2193\nSAM Pods\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Google-managed certificates auto-renew"}),"\n",(0,t.jsx)(n.li,{children:"Static IP recommended for production"}),"\n",(0,t.jsx)(n.li,{children:"SSL certificate provisioning takes 15-30 minutes"}),"\n",(0,t.jsx)(n.li,{children:"Uses Google Cloud Load Balancer (Global or Regional)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"azure-application-gateway-ingress-aks",children:"Azure Application Gateway Ingress (AKS)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Best for:"})," Azure Kubernetes Service (AKS) clusters"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"AKS cluster with Application Gateway Ingress Controller (AGIC)"}),"\n",(0,t.jsx)(n.li,{children:"Azure Application Gateway"}),"\n",(0,t.jsx)(n.li,{children:"SSL certificate in Azure Key Vault or cert-manager"}),"\n",(0,t.jsx)(n.li,{children:"Virtual Network configured"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # Application Gateway handles TLS termination\n\ningress:\n  enabled: true\n  className: "azure/application-gateway"\n  annotations:\n    # Application Gateway configuration\n    appgw.ingress.kubernetes.io/backend-protocol: "http"\n    appgw.ingress.kubernetes.io/ssl-redirect: "true"\n\n    # Use SSL certificate from Azure Key Vault\n    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "sam-ssl-cert"\n\n    # Or specify certificate by name\n    # cert-manager.io/cluster-issuer: "letsencrypt-prod"\n\n    # Health probe configuration\n    appgw.ingress.kubernetes.io/health-probe-path: "/"\n    appgw.ingress.kubernetes.io/health-probe-interval: "30"\n    appgw.ingress.kubernetes.io/health-probe-timeout: "30"\n    appgw.ingress.kubernetes.io/health-probe-unhealthy-threshold: "3"\n\n    # Connection draining\n    appgw.ingress.kubernetes.io/connection-draining: "true"\n    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"\n\n    # Request timeout\n    appgw.ingress.kubernetes.io/request-timeout: "30"\n\n  hosts:\n    - host: sam.example.com  # Must specify host\n      paths:\n        # Auth endpoints \u2192 port 5050\n        - path: /login\n          pathType: Prefix\n          portName: auth\n        - path: /callback\n          pathType: Prefix\n          portName: auth\n        - path: /refresh_token\n          pathType: Prefix\n          portName: auth\n        - path: /user_info\n          pathType: Prefix\n          portName: auth\n        - path: /exchange-code\n          pathType: Prefix\n          portName: auth\n        # Web UI \u2192 port 80 (HTTP backend, TLS at App Gateway)\n        - path: /\n          pathType: Prefix\n          portName: webui\n\n  # If using cert-manager\n  tls: []\n    # - secretName: sam-tls\n    #   hosts:\n    #     - sam.example.com\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Setup Steps:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Create Application Gateway (if not exists):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"az network application-gateway create \\\n  --name sam-appgw \\\n  --resource-group myResourceGroup \\\n  --location eastus \\\n  --capacity 2 \\\n  --sku Standard_v2 \\\n  --vnet-name myVNet \\\n  --subnet appgw-subnet \\\n  --public-ip-address sam-public-ip\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Install AGIC using Helm:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add application-gateway-kubernetes-ingress https://appgwingress.blob.core.windows.net/ingress-azure-helm-package/\nhelm repo update\n\nhelm install ingress-azure \\\n  application-gateway-kubernetes-ingress/ingress-azure \\\n  --namespace kube-system \\\n  --set appgw.subscriptionId=<subscription-id> \\\n  --set appgw.resourceGroup=<resource-group> \\\n  --set appgw.name=<appgw-name> \\\n  --set armAuth.type=servicePrincipal \\\n  --set armAuth.secretJSON=<secret-json>\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Upload SSL certificate to Azure Key Vault:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Key Vault\naz keyvault create --name sam-keyvault --resource-group myResourceGroup\n\n# Import certificate\naz keyvault certificate import \\\n  --vault-name sam-keyvault \\\n  --name sam-ssl-cert \\\n  --file /path/to/certificate.pfx\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"4. Configure Application Gateway to access Key Vault:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Enable managed identity on App Gateway\naz network application-gateway identity assign \\\n  --gateway-name sam-appgw \\\n  --resource-group myResourceGroup \\\n  --identity sam-appgw-identity\n\n# Grant access to Key Vault\naz keyvault set-policy \\\n  --name sam-keyvault \\\n  --object-id <appgw-managed-identity-object-id> \\\n  --secret-permissions get \\\n  --certificate-permissions get\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"5. Install SAM:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install sam . -f values.yaml\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"6. Get the Ingress IP:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get ingress sam -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"7. Configure DNS:"}),"\nCreate an A record in Azure DNS or your DNS provider pointing ",(0,t.jsx)(n.code,{children:"sam.example.com"})," to the Application Gateway public IP."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Traffic Flow:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Client (HTTPS)\n   \u2193\nAzure Application Gateway (TLS termination)\n   \u2193\nHTTP (internal Azure VNet)\n   \u2193\nAKS Service\n   \u2193\nSAM Pods\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Points:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Application Gateway supports WAF (Web Application Firewall)"}),"\n",(0,t.jsx)(n.li,{children:"SSL certificates managed in Azure Key Vault"}),"\n",(0,t.jsx)(n.li,{children:"Integrated with Azure Monitor for observability"}),"\n",(0,t.jsx)(n.li,{children:"Supports path-based and host-based routing"}),"\n",(0,t.jsx)(n.li,{children:"Can integrate with Azure Front Door for global load balancing"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"nginx-ingress",children:"NGINX Ingress"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Best for:"})," Multi-cloud, on-premises, or when you need more control"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"NGINX Ingress Controller installed"}),"\n",(0,t.jsx)(n.li,{children:"TLS certificate (cert-manager recommended)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # NGINX handles TLS termination\n\ningress:\n  enabled: true\n  className: "nginx"\n  annotations:\n    # NGINX-specific settings\n    nginx.ingress.kubernetes.io/ssl-redirect: "true"\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n\n    # Rate limiting (optional)\n    nginx.ingress.kubernetes.io/limit-rps: "100"\n\n    # Cert-manager (automatic TLS)\n    cert-manager.io/cluster-issuer: "letsencrypt-prod"\n\n  hosts:\n    - host: sam.example.com  # Must specify host for NGINX\n      paths:\n        # Auth endpoints\n        - path: /login\n          pathType: Prefix\n          portName: auth\n        - path: /callback\n          pathType: Prefix\n          portName: auth\n        - path: /refresh_token\n          pathType: Prefix\n          portName: auth\n        - path: /user_info\n          pathType: Prefix\n          portName: auth\n        - path: /exchange-code\n          pathType: Prefix\n          portName: auth\n        # Web UI\n        - path: /\n          pathType: Prefix\n          portName: webui\n\n  tls:\n    - secretName: sam-tls\n      hosts:\n        - sam.example.com\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"With cert-manager (automatic TLS):"})}),"\n",(0,t.jsx)(n.p,{children:"Cert-manager will automatically provision and renew certificates from Let's Encrypt."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Manual TLS certificate:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create TLS secret manually\nkubectl create secret tls sam-tls \\\n  --cert=path/to/tls.crt \\\n  --key=path/to/tls.key \\\n  --namespace=<namespace>\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"other-ingress-controllers",children:"Other Ingress Controllers"}),"\n",(0,t.jsx)(n.p,{children:"SAM supports any Ingress controller that implements the Kubernetes Ingress specification:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Traefik"}),": Popular for microservices, automatic service discovery"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HAProxy"}),": High performance, low latency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Contour"})," (Envoy): Modern, high performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Kong"}),": API gateway features built-in"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GCE Ingress"}),": Google Cloud native"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Azure Application Gateway"}),": Azure native"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/",children:"Kubernetes Ingress Controllers documentation"})," for more options."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tlsssl-configuration",children:"TLS/SSL Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"when-using-ingress-recommended",children:"When Using Ingress (Recommended)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"TLS termination happens at the Ingress/ALB level:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"service:\n  tls:\n    enabled: false  # No service-level TLS needed\n\ningress:\n  enabled: true\n  # TLS handled by Ingress annotations or tls section\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No need to manage TLS certificates in Kubernetes (with ALB/ACM)"}),"\n",(0,t.jsx)(n.li,{children:"Automatic certificate renewal (with cert-manager)"}),"\n",(0,t.jsx)(n.li,{children:"Centralized TLS policy management"}),"\n",(0,t.jsx)(n.li,{children:"Better performance (no double encryption)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"when-using-loadbalancernodeport",children:"When Using LoadBalancer/NodePort"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"TLS termination happens at the Service level:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: LoadBalancer\n  tls:\n    enabled: true\n    cert: ""  # Provided via --set-file\n    key: ""   # Provided via --set-file\n    passphrase: ""\n\ningress:\n  enabled: false\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Install with certificates:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install sam ./charts/solace-agent-mesh \\\n  -f values.yaml \\\n  --set-file service.tls.cert=/path/to/tls.crt \\\n  --set-file service.tls.key=/path/to/tls.key\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Certificate Requirements:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Publicly trusted certificate or signed by trusted CA"}),"\n",(0,t.jsx)(n.li,{children:"Self-signed certificates are not supported"}),"\n",(0,t.jsxs)(n.li,{children:["Must match the hostname in ",(0,t.jsx)(n.code,{children:"sam.dnsName"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"decision-matrix",children:"Decision Matrix"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Scenario"}),(0,t.jsx)(n.th,{children:"Service Type"}),(0,t.jsx)(n.th,{children:"Ingress"}),(0,t.jsx)(n.th,{children:"Why"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Local development"})}),(0,t.jsx)(n.td,{children:"ClusterIP"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Use kubectl port-forward"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Team development"})}),(0,t.jsx)(n.td,{children:"NodePort"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Quick team access without port-forward"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Simple cloud prod"})}),(0,t.jsx)(n.td,{children:"LoadBalancer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Quick setup"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Production (HTTP apps)"})}),(0,t.jsx)(n.td,{children:"ClusterIP"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Yes"})," \u2705"]}),(0,t.jsx)(n.td,{children:"Cost-effective, scalable, feature-rich"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Bare-metal cluster"})}),(0,t.jsx)(n.td,{children:"NodePort or ClusterIP"}),(0,t.jsx)(n.td,{children:"Yes (with MetalLB)"}),(0,t.jsx)(n.td,{children:"No cloud provider available"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Multiple services"})}),(0,t.jsx)(n.td,{children:"ClusterIP"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Yes"})," \u2705"]}),(0,t.jsx)(n.td,{children:"Share one load balancer"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-development-local",children:"Example 1: Development (Local)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"service:\n  type: ClusterIP\n\ningress:\n  enabled: false\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl port-forward svc/sam 8443:443\n# Visit https://localhost:8443\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-2-development-team",children:"Example 2: Development (Team)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"service:\n  type: NodePort\n\ningress:\n  enabled: false\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Get node IP and port\nkubectl get svc sam\n# Visit https://<node-ip>:<nodeport>\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-3-simple-production-aws",children:"Example 3: Simple Production (AWS)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: LoadBalancer\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"\n    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n  tls:\n    enabled: true\n\ningress:\n  enabled: false\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Install:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install sam . -f values.yaml \\\n  --set-file service.tls.cert=tls.crt \\\n  --set-file service.tls.key=tls.key\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-4-production-with-aws-alb",children:"Example 4: Production with AWS ALB"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # ALB handles TLS\n\ningress:\n  enabled: true\n  className: "alb"\n  annotations:\n    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:...\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    external-dns.alpha.kubernetes.io/hostname: sam.example.com\n  hosts:\n    - host: ""\n      paths:\n        - path: /login\n          portName: auth\n        - path: /callback\n          portName: auth\n        - path: /\n          portName: webui\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-5-production-with-gke-ingress",children:"Example 5: Production with GKE Ingress"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # GKE handles TLS\n\ningress:\n  enabled: true\n  className: "gce"\n  annotations:\n    kubernetes.io/ingress.global-static-ip-name: "sam-static-ip"\n    networking.gke.io/managed-certificates: "sam-ssl-cert"\n  hosts:\n    - host: sam.example.com\n      paths:\n          - path: /login\n            pathType: Prefix\n            portName: auth\n          - path: /callback\n            pathType: Prefix\n            portName: auth\n          - path: /refresh_token\n            pathType: Prefix\n            portName: auth\n          - path: /user_info\n            pathType: Prefix\n            portName: auth\n          - path: /exchange-code\n            pathType: Prefix\n            portName: auth\n          - path: /is_token_valid\n            pathType: Prefix\n            portName: auth\n          # Catch-all for Web UI \u2192 port 80 (HTTP, TLS at ALB)\n          - path: /\n            pathType: Prefix\n            portName: webui\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Setup:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create static IP\ngcloud compute addresses create sam-static-ip --global\n\n# Create managed certificate\nkubectl apply -f - <<EOF\napiVersion: networking.gke.io/v1\nkind: ManagedCertificate\nmetadata:\n  name: sam-ssl-cert\nspec:\n  domains:\n    - sam.example.com\nEOF\n\n# Install SAM\nhelm install sam . -f values.yaml\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-6-production-with-azure-application-gateway-aks",children:"Example 6: Production with Azure Application Gateway (AKS)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # App Gateway handles TLS\n\ningress:\n  enabled: true\n  className: "azure/application-gateway"\n  annotations:\n    appgw.ingress.kubernetes.io/backend-protocol: "http"\n    appgw.ingress.kubernetes.io/ssl-redirect: "true"\n    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "sam-ssl-cert"\n  hosts:\n    - host: sam.example.com\n      paths:\n          - path: /login\n            pathType: Prefix\n            portName: auth\n          - path: /callback\n            pathType: Prefix\n            portName: auth\n          - path: /refresh_token\n            pathType: Prefix\n            portName: auth\n          - path: /user_info\n            pathType: Prefix\n            portName: auth\n          - path: /exchange-code\n            pathType: Prefix\n            portName: auth\n          - path: /is_token_valid\n            pathType: Prefix\n            portName: auth\n          # Catch-all for Web UI \u2192 port 80 (HTTP, TLS at ALB)\n          - path: /\n            pathType: Prefix\n            portName: webui\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Setup:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Upload certificate to Key Vault\naz keyvault certificate import \\\n  --vault-name sam-keyvault \\\n  --name sam-ssl-cert \\\n  --file certificate.pfx\n\n# Install SAM\nhelm install sam . -f values.yaml\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-7-production-with-nginx--cert-manager",children:"Example 7: Production with NGINX + cert-manager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'service:\n  type: ClusterIP\n  tls:\n    enabled: false  # NGINX handles TLS\n\ningress:\n  enabled: true\n  className: "nginx"\n  annotations:\n    cert-manager.io/cluster-issuer: "letsencrypt-prod"\n  hosts:\n    - host: sam.example.com\n      paths:\n          - path: /login\n            pathType: Prefix\n            portName: auth\n          - path: /callback\n            pathType: Prefix\n            portName: auth\n          - path: /refresh_token\n            pathType: Prefix\n            portName: auth\n          - path: /user_info\n            pathType: Prefix\n            portName: auth\n          - path: /exchange-code\n            pathType: Prefix\n            portName: auth\n          - path: /is_token_valid\n            pathType: Prefix\n            portName: auth\n          # Catch-all for Web UI \u2192 port 80 (HTTP, TLS at ALB)\n          - path: /\n            pathType: Prefix\n            portName: webui\n  tls:\n    - secretName: sam-tls\n      hosts:\n        - sam.example.com\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"Kubernetes Ingress Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://kubernetes-sigs.github.io/aws-load-balancer-controller/",children:"AWS Load Balancer Controller"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/",children:"NGINX Ingress Controller"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://cert-manager.io/",children:"cert-manager Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/kubernetes-sigs/external-dns",children:"External DNS"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,t.jsxs)(n.p,{children:["For network configuration questions or issues, please open an issue in ",(0,t.jsx)(n.a,{href:"https://github.com/SolaceProducts/solace-agent-mesh-helm-quickstart/issues",children:"GitHub Issues"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);