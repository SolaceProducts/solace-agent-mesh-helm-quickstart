# Solace Agent Mesh (SAM) - Minikube Local Development Configuration
# This configuration is optimized for local development on Minikube
#
# Features:
# - No TLS (uses HTTP)
# - No OIDC authentication (development mode)
# - ClusterIP service (access via port-forward or minikube service)
# - Bundled PostgreSQL + SeaweedFS persistence
# - Minimal resource requirements
#
# Usage:
# 1. Start Minikube: minikube start
# 2. Install: helm install agent-mesh charts/solace-agent-mesh -f samples/values/minikube-local-dev.yaml
# 3. Access: kubectl port-forward svc/agent-mesh-solace-agent-mesh 8000:80
# 4. Open: http://localhost:8000

# SAM Core Configuration
sam:
  # Use localhost for local development
  dnsName: "localhost"

  # Session secret (you can use any string for local dev)
  sessionSecretKey: "local-dev-secret-key-change-me"

  # Enterprise mode enabled but with OIDC disabled for local dev
  enterprise: true

  # OIDC disabled - leave issuer empty to skip authentication
  oauthProvider:
    oidc:
      issuer: ""  # Empty issuer disables OIDC authentication
      clientId: ""
      clientSecret: ""

# Solace Broker Configuration
broker:
  url: "ws://localhost:8080" # TODO: Replace with your local/remote broker URL
  clientUsername: "default" # TODO: Replace with your broker username
  password: "default" # TODO: Replace with your broker password
  vpn: "default" # TODO: Replace with your VPN name

# LLM Service Configuration
llmService:
  planningModel: "gpt-4o" # TODO: Replace with your model
  generalModel: "gpt-4o" # TODO: Replace with your model
  reportModel: "gpt-4o" # TODO: Replace with your model
  imageModel: "dall-e-3" # TODO: Replace with your model
  transcriptionModel: "whisper-1" # TODO: Replace with your model
  llmServiceEndpoint: "https://api.openai.com/v1" # TODO: Replace with your LLM endpoint
  llmServiceApiKey: "your-openai-api-key" # TODO: Replace with your API key

# Kubernetes Service Configuration
service:
  type: ClusterIP  # ClusterIP for local development
  annotations: {}
  tls:
    enabled: false  # No TLS for local development
    passphrase: ""

# Persistence Configuration
# Uses bundled PostgreSQL and SeaweedFS for local development
global:
  persistence:
    enabled: true
    namespaceId: "solace-agent-mesh-local" # Unique namespace for local dev

# SAM Deployment Configuration
samDeployment:
  # No image pull secret needed for local dev if images are public
  # or if you're using minikube's docker daemon
  imagePullSecret: ""

  # Main SAM Image
  image:
    repository: gcr.io/gcp-maas-prod/solace-agent-mesh-enterprise
    tag: 1.6.1-5
    pullPolicy: IfNotPresent  # Use IfNotPresent to avoid pulling on every restart

  # Agent Deployer image
  agentDeployer:
    image:
      repository: gcr.io/gcp-maas-prod/sam-agent-deployer
      tag: 1.1.2
      pullPolicy: IfNotPresent